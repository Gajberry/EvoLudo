<!--
//
//  EvoLudo Project
//
//  Copyright 2002-2010 Christoph Hauert
//
//  This work is licensed under the Creative Commons Attribution-Noncommercial 2.5 Canada License. 
//  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc/2.5/ca/ or send
//  a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.
//
//  According to the above license you may share, adapt and extend the project for your own purposes but
//  you may not use it for commercial purposes and you are required to attribute the author and the origin 
//  of the project as follows:
//
//  Hauert, Christoph (2010) EvoLudo Project, http://www.evoludo.org (svn: revision number)
//  or
//  Hauert, Christoph (2010) EvoLudo Project, http://www.evoludo.org (date of download)
//
//  with the date of the download or the svn revision number inserted as appropriate (the formatting may 
//  be changed to comply with publisher requirements)
//
//  -->

<!-- ant build file for core classes of EvoLudoLabs -->

<project name="core" default="all" basedir="." >

	<property name="src" value="src"/>
	<property name="resources" value="resources"/>
	<property name="build" value="build"/>
	<property name="build.classes" value="${build}/classes"/>

	<!-- default compiler args (optimize and maximize compatibility) -->
	<property name="compilerargs" value="-nowarn"/>
	<property name="source" value="1.3"/>
	<property name="target" value="1.2"/>
	<property name="debug" value="off"/>
	<property name="optimize" value="on"/>
	<property name="listfiles" value="no"/>

	<!-- build discrete and continuous applets -->
	<target name="dapplet" depends="dinterface,applet,strip">
		<echo message="Compiling ${applet} with '${compilerargs}', optimize: ${optimize}, debug: ${debug}"/>
	</target>

	<target name="capplet" depends="cinterface,applet,strip">
		<echo message="Compiling ${applet} with '${compilerargs}', optimize: ${optimize}, debug: ${debug}"/>
	</target>

	<target name="dsims" depends="dcore,sim">
		<echo message="Compiling ${sim} with '${compilerargs}', optimize: ${optimize}, debug: ${debug}"/>
	</target>

	<target name="csims" depends="ccore,sim">
		<echo message="Compiling ${sim} with '${compilerargs}', optimize: ${optimize}, debug: ${debug}"/>
	</target>

	<target name="applet">
		<property name="main" value="${applet}"/>
		<javac srcdir="${src}" 
			   destdir="${build.classes}" 
			   source="${source}" 
			   target="${target}" 
			   listfiles="${listfiles}" 
			   debug="${debug}" 
			   optimize="${optimize}" >
			<include name="org/evoludo/labs/interface/labs/${main}Lab.java"/>
			<include name="org/evoludo/labs/core/labs/${main}.java"/>
			<compilerarg value="${compilerargs}"/>
		</javac>

		<jar destfile="${build.applets}/${applet}.jar" basedir="${build.classes}" >
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="org.evoludo.labs.${main}Lab"/>
			</manifest>
		</jar>
	</target>

	<target name="sim">
		<property name="game" value="${core}"/>
		<property name="main" value="${sim}"/>
		<javac srcdir="${src}" 
			   destdir="${build.classes}" 
			   source="${source}" 
			   target="${target}" 
			   listfiles="${listfiles}" 
			   debug="${debug}" 
			   optimize="${optimize}" >
			<include name="org/evoludo/labs/core/labs/${game}.java"/>
			<include name="org/evoludo/labs/simulation/${main}.java"/>
			<compilerarg value="${compilerargs}"/>
		</javac>

		<jar destfile="${build.simulations}/${main}.jar" basedir="${build.classes}" >
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="org.evoludo.labs.${main}"/>
			</manifest>
		</jar>
	</target>

   <!-- build discrete interface -->
  <target name="dinterface" depends="dcore,svg">
    <javac srcdir="${src}" 
		   destdir="${build.classes}" 
		   source="${source}" 
		   target="${target}" 
		   listfiles="${listfiles}" 
		   debug="${debug}" 
		   optimize="${optimize}" >
        <include name="org/evoludo/labs/interface/GenericLab.java"/>
        <include name="org/evoludo/labs/interface/PopulationLab.java"/>
        <include name="org/evoludo/labs/interface/DPopulationLab.java"/>
        <include name="org/evoludo/labs/interface/ParamPanel.java"/>
        <include name="org/evoludo/labs/interface/MultiView.java"/>
        <include name="org/evoludo/labs/interface/MVLog.java"/>
        <include name="org/evoludo/labs/interface/MVAbstractCore.java"/>
        <include name="org/evoludo/labs/interface/MVAbstract.java"/>
        <include name="org/evoludo/labs/interface/MVDMean.java"/>
        <include name="org/evoludo/labs/interface/MVDS3.java"/>
        <include name="org/evoludo/labs/interface/MVDS4Manifold.java"/>
        <include name="org/evoludo/labs/interface/MVDPhase2D.java"/>
        <include name="org/evoludo/labs/interface/MVPop.java"/>
		<include name="org/evoludo/labs/interface/MVPop3D.java"/>
        <include name="org/evoludo/labs/interface/MVFitness.java"/>
        <include name="org/evoludo/labs/interface/MVFitHistogram.java"/>
        <include name="org/evoludo/graphics/AbstractGraph.java"/>
        <include name="org/evoludo/graphics/ColorModel.java"/>
        <include name="org/evoludo/graphics/LineGraph.java"/>
        <include name="org/evoludo/graphics/StateGraphListener.java"/>
        <include name="org/evoludo/graphics/StateData.java"/>
		<include name="org/evoludo/graphics/S3Graph.java"/>
        <include name="org/evoludo/graphics/ParaGraph.java"/>
        <include name="org/evoludo/graphics/PopGraph.java"/>
		<include name="org/evoludo/graphics/PopGraph3D.java"/>
        <include name="org/evoludo/graphics/PopData.java"/>
        <include name="org/evoludo/graphics/PopFrameLayer.java"/>
        <include name="org/evoludo/graphics/PopListener.java"/>
        <include name="org/evoludo/graphics/HistoGraphListener.java"/>
        <include name="org/evoludo/graphics/FrameLayer.java"/>
        <include name="org/evoludo/graphics/S3FrameLayer.java"/>
        <include name="org/evoludo/graphics/GlassLayer.java"/>
        <include name="org/evoludo/graphics/GraphAxis.java"/>
        <include name="org/evoludo/graphics/GraphLabel.java"/>
        <include name="org/evoludo/graphics/GraphListener.java"/>
		<compilerarg value="${compilerargs}"/>
    </javac>
    <copy todir="${build.classes}/${resources}">
        <fileset dir="${resources}" includes="*"/>
    </copy>
	<delete file="${src}/org/evoludo/labs/interface/MVAbstract.java"/>
  </target>

   <!-- build continuous interface -->
  <target name="cinterface" depends="ccore,svg,parser">
    <javac srcdir="${src}" 
		   destdir="${build.classes}" 
		   source="${source}" 
		   target="${target}" 
		   listfiles="${listfiles}" 
		   debug="${debug}" 
		   optimize="${optimize}" >
        <include name="org/evoludo/labs/interface/GenericLab.java"/>
        <include name="org/evoludo/labs/interface/PopulationLab.java"/>
        <include name="org/evoludo/labs/interface/CXPopulationLabCore.java"/>
        <include name="org/evoludo/labs/interface/CXPopulationLab.java"/>
        <include name="org/evoludo/labs/interface/ParamPanel.java"/>
        <include name="org/evoludo/labs/interface/MultiView.java"/>
        <include name="org/evoludo/labs/interface/MVLog.java"/>
        <include name="org/evoludo/labs/interface/MVAbstractCore.java"/>
        <include name="org/evoludo/labs/interface/MVAbstract.java"/>
        <include name="org/evoludo/labs/interface/MVPop.java"/>
        <include name="org/evoludo/labs/interface/MVPop3D.java"/>
        <include name="org/evoludo/labs/interface/MVCMean.java"/>
        <include name="org/evoludo/labs/interface/MVCTraitHistogram.java"/>
        <include name="org/evoludo/labs/interface/MVCDistr.java"/>
        <include name="org/evoludo/labs/interface/MVC2Distr.java"/>
        <include name="org/evoludo/labs/interface/MVFitness.java"/>
        <include name="org/evoludo/labs/interface/MVFitHistogram.java"/>
        <include name="org/evoludo/graphics/AbstractGraph.java"/>
        <include name="org/evoludo/graphics/ColorModel.java"/>
        <include name="org/evoludo/graphics/LineGraph.java"/>
        <include name="org/evoludo/graphics/StateGraphListener.java"/>
        <include name="org/evoludo/graphics/StateData.java"/>
        <include name="org/evoludo/graphics/PopGraph.java"/>
        <include name="org/evoludo/graphics/PopData.java"/>
        <include name="org/evoludo/graphics/PopFrameLayer.java"/>
        <include name="org/evoludo/graphics/PopListener.java"/>
        <include name="org/evoludo/graphics/HistoGraphListener.java"/>
        <include name="org/evoludo/graphics/FrameLayer.java"/>
        <include name="org/evoludo/graphics/GlassLayer.java"/>
        <include name="org/evoludo/graphics/GraphAxis.java"/>
        <include name="org/evoludo/graphics/GraphLabel.java"/>
        <include name="org/evoludo/graphics/GraphListener.java"/>
		<compilerarg value="${compilerargs}"/>
    </javac>
    <copy todir="${build.classes}/${resources}">
        <fileset dir="${resources}" includes="*"/>
    </copy>
	<delete file="${src}/org/evoludo/labs/interface/MVAbstract.java"/>
	<delete file="${src}/org/evoludo/labs/interface/CXPopulationLab.java"/>
  </target>

  <!-- scalable vector graphics output -->
  <target name="svg" depends="svgtrue,svgfalse"/>

  <target name="svgtrue" unless="nosvg">
	<copy file="${src}/org/evoludo/labs/interface/MVAbstractSVG.java" 
		  tofile="${src}/org/evoludo/labs/interface/MVAbstract.java" overwrite="true"/>
	<unjar dest="${build.classes}">
		<fileset dir="lib">
			<include name="freehep-graphics2d-2.1.1.jar"/>
			<include name="freehep-util-2.0.2.jar"/>
			<!-- xml is required for svg -->
			<include name="freehep-xml-2.1.1.jar"/>
			<include name="freehep-io-2.0.2.jar"/>
			<include name="freehep-graphicsio-2.1.1.jar"/>
			<!-- we could add further file formats here -->
			<include name="freehep-graphicsio-pdf-2.1.1.jar"/>
			<include name="freehep-graphicsio-svg-2.1.1.jar"/>
			<include name="freehep-graphicsio-ps-2.1.1.jar"/>
		</fileset>
	</unjar>
  </target>

  <target name="svgfalse" if="nosvg">
	<copy file="${src}/org/evoludo/labs/interface/MVAbstractNoSVG.java" 
		  tofile="${src}/org/evoludo/labs/interface/MVAbstract.java" overwrite="true"/>
  </target>

  <!-- function parser for continuous games -->
  <target name="parser" depends="jep,nojep"/>

  <target name="jep" unless="noparser">
	<copy file="${src}/org/evoludo/labs/interface/CXPopulationLabJEP.java" 
		  tofile="${src}/org/evoludo/labs/interface/CXPopulationLab.java" overwrite="true"/>
	<unjar dest="${build.classes}">
		<fileset dir="lib">
			<include name="jep-2.3.1.jar"/>
		</fileset>
	</unjar>
  </target>

  <target name="nojep" if="noparser">
	<copy file="${src}/org/evoludo/labs/interface/CXPopulationLabNoJEP.java" 
		  tofile="${src}/org/evoludo/labs/interface/CXPopulationLab.java" overwrite="true"/>
  </target>

   <!-- build discrete engine -->
  <target name="dcore" depends="svn">
    <javac srcdir="${src}" 
		   destdir="${build.classes}" 
		   source="${source}" 
		   target="${target}" 
		   listfiles="${listfiles}" 
		   debug="${debug}" 
		   optimize="${optimize}" >
<!--        <include name="org/evoludo/labs/core/util/Analyze.java"/> -->
        <include name="org/evoludo/labs/core/Population.java"/>
        <include name="org/evoludo/labs/core/DPopulation.java"/>
        <include name="org/evoludo/labs/core/PopulationGeometry.java"/>
        <include name="org/evoludo/labs/core/PopulationParser.java"/>
        <include name="org/evoludo/labs/core/EngineListener.java"/>
        <include name="org/evoludo/labs/core/util/RungeKutta.java"/>
        <include name="org/evoludo/labs/core/util/ReactionDiffusion.java"/>
        <include name="org/evoludo/graphics/ColorModel.java"/>
        <include name="org/evoludo/util/ChHMath.java"/>
        <include name="org/evoludo/util/ChHFormatter.java"/>
        <include name="org/evoludo/util/PlistParserer.java"/>
        <include name="org/evoludo/util/XMLCoder.java"/>
        <include name="org/evoludo/util/CLOParser.java"/>
        <include name="org/evoludo/util/CLOProvider.java"/>
        <include name="ec/util/MersenneTwister.java"/>
		<compilerarg value="${compilerargs}"/>
    </javac>
  </target>

   <!-- build continuous engine -->
  <target name="ccore" depends="svn">
    <javac srcdir="${src}" 
		   destdir="${build.classes}" 
		   source="${source}" 
		   target="${target}" 
		   listfiles="${listfiles}" 
		   debug="${debug}" 
		   optimize="${optimize}" >
<!--        <include name="org/evoludo/labs/core/util/Analyze.java"/> -->
        <include name="org/evoludo/labs/core/Population.java"/>
        <include name="org/evoludo/labs/core/CXPopulation.java"/>
        <include name="org/evoludo/labs/core/CPopulation.java"/>
        <include name="org/evoludo/labs/core/PopulationGeometry.java"/>
        <include name="org/evoludo/labs/core/PopulationParser.java"/>
        <include name="org/evoludo/labs/core/EngineListener.java"/>
<!-- rungekutta and reactiondiffusion added -->
		<include name="org/evoludo/labs/core/util/RungeKutta.java"/>
        <include name="org/evoludo/labs/core/util/ReactionDiffusion.java"/>
        <include name="org/evoludo/graphics/ColorModel.java"/>
        <include name="org/evoludo/util/ChHMath.java"/>
        <include name="org/evoludo/util/ChHFormatter.java"/>
        <include name="org/evoludo/util/PlistParserer.java"/>
        <include name="org/evoludo/util/XMLCoder.java"/>
        <include name="org/evoludo/util/CLOParser.java"/>
        <include name="org/evoludo/util/CLOProvider.java"/>
        <include name="ec/util/MersenneTwister.java"/>
		<compilerarg value="${compilerargs}"/>
    </javac>
  </target>

 <!-- get svn revision -->
  <target name="svn" depends="init">
    <exec executable="svn" output="${build.classes}/svn.info">
        <arg value="info"/>
        <arg value="-r"/>
        <arg value="HEAD"/>
    </exec>
  </target>

  <!-- Prepare build directories -->
  <target name="init">
    <mkdir dir="${build}"/>
    <mkdir dir="${build.classes}"/>
  </target>

  <target name="strip" if="strip">
    <move file="${build.applets}/${applet}.jar" tofile="${build.applets}/${applet}_orig.jar" />
	<taskdef name="proguard" classname="proguard.ant.ProGuardTask" classpath="tools/proguard/proguard.jar" />
	<proguard>
		-injars ${build.applets}/${applet}_orig.jar
		-outjars ${build.applets}/${applet}.jar
		-libraryjars ${java.home}/../Classes/classes.jar(java/**,javax/**,org/xml/**)
-dontskipnonpubliclibraryclasses
		<!-- this is apple specific -->
		-libraryjars /System/Library/Java/Extensions/j3dcore.jar
		-libraryjars /System/Library/Java/Extensions/j3dutils.jar
		-libraryjars /System/Library/Java/Extensions/vecmath.jar
		-keep public class org.evoludo.labs.${main}Lab {
			public static void main(java.lang.String[]);
		}
		-keep class org.evoludo.labs.GenericLab
		-keep class * implements org.evoludo.labs.GenericLab
		-keep class * implements org.evoludo.labs.Population
	</proguard>
  </target>
</project>

