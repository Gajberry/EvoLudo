<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<!--
//
// EvoLudo Project
//
// Copyright 2010 Christoph Hauert
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// For publications in any form, you are kindly requested to attribute the
// author and project as follows:
//
//	Hauert, Christoph (<year>) EvoLudo Project, http://www.evoludo.org
//			(doi: <doi>[, <version>])
//
//	<doi>:	digital object identifier of the downloaded release (or the
//			most recent release if downloaded from github.com),
//	<year>:	year of release (or download), and
//	[, <version>]: optional version number (as reported in output header
//			or GUI console) to simplify replication of reported results.
//
// The formatting may be adjusted to comply with publisher requirements.
//
//  -->

<!-- ant build file for EvoLudoLabs -->

<project name="EvoLudoLabs" default="EvoLudo" basedir="." >

	<!-- Properties -->

	<property name="src" value="src"/>
	<property name="build" value="build"/>
	<property name="build.classes" value="${build}/classes"/>
	<property name="build.applets" value="${build}/applets"/>
	<property name="build.simulations" value="${build}/simulations"/>
	<property name="web" value="web"/>
	<property name="product" value="product"/>
	<property name="ant.files" value="ant"/>

	<property environment="env"/>

	<!-- Targets -->

	<!-- Enable debug mode: export DEBUG=debug (command line arguments to ant fail...) -->
	
	<!-- Prepare build directories -->
	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.applets}"/>
		<mkdir dir="${build.simulations}"/>
		<condition property="compilerargs" value="-Xlint:all,-fallthrough">
			<equals arg1="${env.DEBUG}" arg2="debug"/>
		</condition>
		<condition property="debug" value="on">
			<equals arg1="${env.DEBUG}" arg2="debug"/>
		</condition>
		<condition property="optimize" value="off">
			<equals arg1="${env.DEBUG}" arg2="debug"/>
		</condition>
		<condition property="nostrip">
			<equals arg1="${env.DEBUG}" arg2="debug"/>
		</condition>
		<condition property="listfiles" value="on">
			<equals arg1="${env.DEBUG}" arg2="debug"/>
		</condition>
	</target>

	<!-- Kill all the created directories -->
	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${product}"/>
	</target>

	<!-- EvoLudo -->
	<target name="EvoLudo" depends="init">
		<ant antfile="${ant.files}/core.xml" target="applet"/>
	</target>

	<!-- EvoLudo simulator -->
	<target name="EvoLudoSim" depends="init">
		<ant antfile="${ant.files}/core.xml" target="simulator"/>
	</target>

	<!-- Test suite -->
	<target name="test" depends="init">
		<ant antfile="${ant.files}/core.xml" target="test"/>
	</target>

	<!-- Simulations -->
	<target name="simDialect">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="Dialect"/>
			<param name="sim" value="simDialect"/>
		</antcall>
	</target>

	<target name="scanMoti">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="Motility"/>
			<param name="sim" value="scanMotility"/>
		</antcall>
	</target>

	<target name="simMoran">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="Moran"/>
			<param name="sim" value="simMoran"/>
		</antcall>
	</target>
	
	<target name="scanEcoMoran">
		<antcall target="-sims">
			<param name="nosvg" value="false"/>
			<param name="core" value="EcoMoran"/>
			<param name="sim" value="scanEcoMoran"/>
		</antcall>
	</target>

	<target name="sim2x2Fix">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="TwoByTwo"/>
			<param name="sim" value="simTBTFix"/>
		</antcall>
	</target>

	<target name="sim2x2Matching">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="TwoByTwo"/>
			<param name="sim" value="simTBTMatching"/>
		</antcall>
	</target>

	<target name="sim2x2">
		<antcall target="-sims">
			<!-- needs svg for snapshots -->
			<param name="nosvg" value="false"/>
			<param name="core" value="TwoByTwo"/>
			<param name="sim" value="simTBT"/>
		</antcall>
	</target>

	<target name="scanEco2x2">
		<antcall target="-sims">
			<!-- needs svg for snapshots -->
			<param name="nosvg" value="false"/>
			<param name="core" value="EcoTBT"/>
			<param name="sim" value="scanEcoTBT"/>
		</antcall>
	</target>

	<target name="simMutual">
		<antcall target="-sims">
			<!-- needs svg for snapshots -->
			<param name="nosvg" value="false"/>
			<param name="core" value="Mutualism"/>
			<param name="sim" value="simMutual"/>
		</antcall>
	</target>

	<target name="simCG">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="CG"/>
			<param name="sim" value="simCG"/>
		</antcall>
	</target>
	
	<target name="simDemes2x2">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="DemesTBT"/>
			<param name="super" value="TwoByTwo"/>
			<param name="sim" value="simDemesTBT"/>
		</antcall>
	</target>

	<target name="simCDL">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="CDL"/>
			<param name="sim" value="simCDL"/>
		</antcall>
	</target>

	<target name="simCDLP">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="CDLP"/>
			<param name="sim" value="simCDLP"/>
		</antcall>
	</target>

	<!-- this is a bit hackish - we need some classes from the interface to enable snapshots... -->
	<target name="simCDLPQ">
		<antcall target="-interface">
			<param name="nosvg" value="true"/>
			<param name="core" value="CDLPQ"/>
		</antcall>
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="CDLPQ"/>
			<param name="sim" value="simCDLPQ"/>
		</antcall>
	</target>

	<target name="simEcoPGG">
		<antcall target="-interface">
			<param name="nosvg" value="true"/>
			<param name="core" value="EcoPGG"/>
		</antcall>
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="EcoPGG"/>
			<param name="sim" value="simEcoPGG"/>
		</antcall>
	</target>

	<target name="simRSP">
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="RSP"/>
			<param name="sim" value="simRSP"/>
		</antcall>
	</target>

	<!-- n-traits -->
	<target name="Traits">
		<!-- build mtj first -->
		<ant antfile="${ant.files}/core.xml" target="mtj">
			<property name="build.classes" value="${build.classes}/Traits"/>
		</ant>
		<ant antfile="${ant.files}/core.xml" target="applet"/>
	</target>

	<target name="simTraits">
		<!-- build mtj first -->
		<ant antfile="${ant.files}/core.xml" target="mtj">
			<property name="build.classes" value="${build.classes}/Traits"/>
		</ant>
		<antcall target="-sims">
			<param name="nosvg" value="true"/>
			<param name="core" value="Traits"/>
			<param name="sim" value="simTraits"/>
		</antcall>
	</target>

	<target name="scanCSD">
		<antcall target="-sims">
			<param name="core" value="CSD"/>
			<param name="sim" value="scanCSD"/>
		</antcall>
	</target>

	<!-- helper targets - do not call directly -->	
	<target name="-sims" depends="init">
		<ant antfile="${ant.files}/core.xml" target="sims">
			<property name="build.classes" value="${build.simulations}/${core}"/>
		</ant>
	</target>

	<target name="-interface" depends="init">
		<ant antfile="${ant.files}/core.xml" target="interface">
			<property name="build.classes" value="${build.simulations}/${core}"/>
		</ant>
	</target>

	<!-- create javadoc documentation -->
    <target name="docs">
		<!-- read properties and start building -->
		<ant antfile="${ant.files}/core.xml" target="-docs">
		</ant>
    </target>

	<!-- GWT compilation targets -->
	<!-- Arguments to gwtc and devmode targets -->
	<property name="gwt.args" value="" />

	<target name="gwt-test" description="Run development and production mode tests">
		<ant antfile="${ant.files}/core.xml" target="test.dev"/>
		<ant antfile="${ant.files}/core.xml" target="test.prod"/>
	</target>
	
	<target name="gwt-build">
		<ant antfile="${ant.files}/core.xml" target="gwtc"/>
	</target>

	<target name="gwt-dev">
		<ant antfile="${ant.files}/core.xml" target="devmode"/>
	</target>

	<target name="gwt-war" depends="gwt-build" description="Create a war file">
		<zip destfile="EvoLudoWeb.war" basedir="war"/>
	</target>
	
	<target name="gwt-clean" description="Cleans this project">
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/evoludoweb" failonerror="false" />
	</target>
</project>
